<?xml version="1.0" encoding="UTF-8"?>
<!--
    This can also be used as
    watchPlayer.xhtml?watch=whom_I_want_to_watch
    watchPlayer.xhtml?iam=my_pid

-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
    <title>Apache Tomcat WebSocket Examples: Watching a GOHR player</title>
    <style type="text/css"><![CDATA[
        input#chat {
            width: 410px
        }

        #console-container {
            width: 1000px;
        }

        #console {
            border: 1px solid #CCCCCC;
            border-right-color: #999999;
            border-bottom-color: #999999;
            height: 300px;
            overflow-y: scroll;
            padding: 5px;
            width: 100%;
        }

        #console p {
            padding: 0;
            margin: 0;
        }
    ]]></style>
    <script type="application/javascript"><![CDATA[
        "use strict";


	function getQueryVariable(variable)	{
       		 var query = window.location.search.substring(1);
       		 var vars = query.split("&");
        	 for (var i=0;i<vars.length;i++) {
               	     var pair = vars[i].split("=");
               	     if(pair[0] == variable){return pair[1];}
        	 }
       		 return(false);
	}

        var Chat = {};

        Chat.socket = null;

        Chat.connect = (function(host) {
            if ('WebSocket' in window) {
                Chat.socket = new WebSocket(host);
            } else if ('MozWebSocket' in window) {
                Chat.socket = new MozWebSocket(host);
            } else {
                Console.log('Error: WebSocket is not supported by this browser.');
                return;
            }

            Chat.socket.onopen = function () {
                Console.log('Info: WebSocket connection opened.');
                document.getElementById('chat').onkeydown = function(event) {
                    if (event.keyCode == 13) {
                        Chat.sendMessage();
                    }
                };
		
		var pid = getQueryVariable("iam");
		if (pid)	{	                    Chat.socket.send('IAM '  + pid);            }
		pid = getQueryVariable("watch");
		if (pid)	{	                    Chat.socket.send('WATCH '  + pid);            }

            };

            Chat.socket.onclose = function () {
                document.getElementById('chat').onkeydown = null;
                Console.log('Info: WebSocket closed at '+(new Date()));
            };

            Chat.socket.onmessage = function (message) {
                Console.log(message.data);
            };
        });

        Chat.initialize = function() {
            var proto= (window.location.protocol == 'http:') ? "ws" : "wss";
	    var path= window.location.pathname;
	    var words = path.split("/");
	    var app = words[1];
             var url = proto + '://' + window.location.host + '/' + app + '/websocket/watchPlayer';
//  window.alert('Will use URL ' + url);
            Chat.connect(url);

//            var proto= (window.location.protocol == 'http:') ? "ws" : "wss";
//            Chat.connect(proto + '://' + window.location.host + '/w2020/websocket/watchPlayer');
        };

        Chat.sendMessage = (function() {
            var message = document.getElementById('chat').value;
            if (message != '') {
                Chat.socket.send('WATCH ' + message);
                document.getElementById('chat').value = '';
            }
        });

        var Console = {};

        Console.log = (function(message) {
            var console = document.getElementById('console');
            var p = document.createElement('p');
            p.style.wordWrap = 'break-word';
            p.innerHTML = message;
            console.appendChild(p);
            while (console.childNodes.length > 25) {
                console.removeChild(console.firstChild);
            }
            console.scrollTop = console.scrollHeight;
        });

        Chat.initialize();


        document.addEventListener("DOMContentLoaded", function() {
            // Remove elements with "noscript" class - <noscript> is not allowed in XHTML
            var noscripts = document.getElementsByClassName("noscript");
            for (var i = 0; i < noscripts.length; i++) {
                noscripts[i].parentNode.removeChild(noscripts[i]);
            }
        }, false);
    
    ]]></script>
</head>
<body>
<div class="noscript"><h2 style="color: #ff0000">Seems your browser doesn't support JavaScript! Websockets rely on JavaScript being enabled. Please enable
    JavaScript and reload this page!</h2></div>
<div>
  <p>
    To start watching the activity of a player, type the playerId in the box below and press ENTER.
    </p>
    <p>
        <input type="text" placeholder="playerId" id="chat" />
    </p>
    <div id="console-container">
        <div id="console"/>
    </div>
</div>
</body>
</html>
